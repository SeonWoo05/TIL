정수배열 정렬
스트링
struct ------이정도만
클래스객체 정렬

메모리정렬 함수구현

행렬2 스트링2
------------------------------------------------------------------

int arr[3][4];
int (*P)[4];    // P는 int[4] 배열(한 행)을 가리키는 포인터
P = arr;        // arr은 첫 번째 행의 주소

이렇게 하면:
P[0]은 arr[0]과 같고, *P 도 arr[0] 과 같다.
(*P)[2] → arr[0][2] 처럼 한 행의 요소 접근 가능

✅ 쉽게:
int (*P)[4] 는 4칸짜리 정수 배열(한 줄)의 주소를 저장하는 포인터

-------------------------------------------------------------------

char *p[]; // array of pointers : 포인터들의 배열
문자열 목록을 저장할 때 주로 사용

char (*p)[]; // pointer to array : 배열을 위한 포인터
다차원 배열의 행을 가리킬 때 주로 사용

--------------------------------------------------------------------

int **a
이중 포인터 (pointer to pointer)

a는 int* 타입의 주소를 저장하는 포인터입니다.
즉, a는 포인터를 가리키는 포인터!

int x = 10;
int *p = &x;   // p는 int* 타입
int **a = &p;  // a는 int** 타입

printf("%d\n", **a);  // 10

a는 p의 주소를 가리키고
*a 는 p 자체이고
**a 는 p가 가리키는 값, 즉 x의 값
--------------------------------------------------------------------